export const CryptoDevsNFTAddress =
  "0x83B0850d115186a8e575B5D99d0198cECaf24Cc3";
export const FakeNFTMarketplaceAddress =
  "0xd9EbCBf51ee3d9d6bB670F72427818B2402ad2eA";
export const CryptoDevsDAOAddress =
  "0x9E5BEb335CF05Fe279BE10924A35fD8d55e283A3";

export const CryptoDevsNFTABI = [
  {
    abi: [
      {
        type: "constructor",
        inputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "approve",
        inputs: [
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "balanceOf",
        inputs: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "getApproved",
        inputs: [
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "address",
            internalType: "address",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "isApprovedForAll",
        inputs: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
        ],
        outputs: [
          { name: "", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "mint",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "name",
        inputs: [],
        outputs: [
          {
            name: "",
            type: "string",
            internalType: "string",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "ownerOf",
        inputs: [
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "address",
            internalType: "address",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "setApprovalForAll",
        inputs: [
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
          {
            name: "approved",
            type: "bool",
            internalType: "bool",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "supportsInterface",
        inputs: [
          {
            name: "interfaceId",
            type: "bytes4",
            internalType: "bytes4",
          },
        ],
        outputs: [
          { name: "", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "symbol",
        inputs: [],
        outputs: [
          {
            name: "",
            type: "string",
            internalType: "string",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "tokenByIndex",
        inputs: [
          {
            name: "index",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "tokenOfOwnerByIndex",
        inputs: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "index",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "tokenURI",
        inputs: [
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "string",
            internalType: "string",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "totalSupply",
        inputs: [],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "transferFrom",
        inputs: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "event",
        name: "Approval",
        inputs: [
          {
            name: "owner",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "approved",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            indexed: true,
            internalType: "uint256",
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ApprovalForAll",
        inputs: [
          {
            name: "owner",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "operator",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "approved",
            type: "bool",
            indexed: false,
            internalType: "bool",
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "Transfer",
        inputs: [
          {
            name: "from",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            indexed: true,
            internalType: "uint256",
          },
        ],
        anonymous: false,
      },
      {
        type: "error",
        name: "ERC721EnumerableForbiddenBatchMint",
        inputs: [],
      },
      {
        type: "error",
        name: "ERC721IncorrectOwner",
        inputs: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721InsufficientApproval",
        inputs: [
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidApprover",
        inputs: [
          {
            name: "approver",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidOperator",
        inputs: [
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidOwner",
        inputs: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidReceiver",
        inputs: [
          {
            name: "receiver",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidSender",
        inputs: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721NonexistentToken",
        inputs: [
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        type: "error",
        name: "ERC721OutOfBoundsIndex",
        inputs: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "index",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    bytecode: {
      object:
        "0x608060405234801561001057600080fd5b506040518060400160405280600a81526020016943727970746f4465767360b01b8152506040518060400160405280600281526020016110d160f21b815250816000908161005e9190610112565b50600161006b8282610112565b5050506101d0565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009d57607f821691505b6020821081036100bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010d57806000526020600020601f840160051c810160208510156100ea5750805b601f840160051c820191505b8181101561010a57600081556001016100f6565b50505b505050565b81516001600160401b0381111561012b5761012b610073565b61013f816101398454610089565b846100c3565b6020601f821160018114610173576000831561015b5750848201515b600019600385901b1c1916600184901b17845561010a565b600084815260208120601f198516915b828110156101a35787850151825560209485019460019092019101610183565b50848210156101c15786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611388806101df6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b4114610219578063a22cb46514610221578063b88d4fde14610234578063c87b56dd14610247578063e985e9c51461025a57600080fd5b806342842e0e146101cd5780634f6ccce7146101e05780636352211e146101f357806370a082311461020657600080fd5b80631249c58b116100de5780631249c58b1461018d57806318160ddd1461019557806323b872dd146101a75780632f745c59146101ba57600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610fa2565b61026d565b60405190151581526020015b60405180910390f35b610140610298565b60405161012f919061100f565b61016061015b366004611022565b61032a565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611057565b610353565b005b61018b610362565b6008545b60405190815260200161012f565b61018b6101b5366004611081565b610376565b6101996101c8366004611057565b610406565b61018b6101db366004611081565b61046b565b6101996101ee366004611022565b61048b565b610160610201366004611022565b6104e4565b6101996102143660046110be565b6104ef565b610140610537565b61018b61022f3660046110d9565b610546565b61018b61024236600461112b565b610551565b610140610255366004611022565b610569565b61012361026836600461120f565b6105de565b60006001600160e01b0319821663780e9d6360e01b148061029257506102928261060c565b92915050565b6060600080546102a790611242565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390611242565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b60006103358261065c565b506000828152600460205260409020546001600160a01b0316610292565b61035e828233610695565b5050565b6103743361036f60085490565b6106a2565b565b6001600160a01b0382166103a557604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103b28383336106bc565b9050836001600160a01b0316816001600160a01b031614610400576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161039c565b50505050565b6000610411836104ef565b82106104425760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161039c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61048683838360405180602001604052806000815250610551565b505050565b600061049660085490565b82106104bf5760405163295f44f760e21b8152600060048201526024810183905260440161039c565b600882815481106104d2576104d261127c565b90600052602060002001549050919050565b60006102928261065c565b60006001600160a01b03821661051b576040516322718ad960e21b81526000600482015260240161039c565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a790611242565b61035e338383610791565b61055c848484610376565b6104003385858585610830565b60606105748261065c565b50600061058c60408051602081019091526000815290565b905060008151116105ac57604051806020016040528060008152506105d7565b806105b68461095b565b6040516020016105c7929190611292565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061063d57506001600160e01b03198216635b5e139f60e01b145b8061029257506301ffc9a760e01b6001600160e01b0319831614610292565b6000818152600260205260408120546001600160a01b03168061029257604051637e27328960e01b81526004810184905260240161039c565b61048683838360016109ee565b61035e828260405180602001604052806000815250610af4565b6000806106ca858585610b0c565b90506001600160a01b0381166107275761072284600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61074a565b846001600160a01b0316816001600160a01b03161461074a5761074a8185610c05565b6001600160a01b0385166107665761076184610c86565b610789565b846001600160a01b0316816001600160a01b031614610789576107898585610d35565b949350505050565b6001600160a01b0382166107c357604051630b61174360e31b81526001600160a01b038316600482015260240161039c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561095457604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108729088908890879087906004016112c1565b6020604051808303816000875af19250505080156108ad575060408051601f3d908101601f191682019092526108aa918101906112fe565b60015b610916573d8080156108db576040519150601f19603f3d011682016040523d82523d6000602084013e6108e0565b606091505b50805160000361090e57604051633250574960e11b81526001600160a01b038516600482015260240161039c565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461095257604051633250574960e11b81526001600160a01b038516600482015260240161039c565b505b5050505050565b6060600061096883610d85565b600101905060008167ffffffffffffffff81111561098857610988611115565b6040519080825280601f01601f1916602001820160405280156109b2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109bc57509392505050565b8080610a0257506001600160a01b03821615155b15610ac4576000610a128461065c565b90506001600160a01b03831615801590610a3e5750826001600160a01b0316816001600160a01b031614155b8015610a515750610a4f81846105de565b155b15610a7a5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161039c565b8115610ac25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610afe8383610e5d565b610486336000858585610830565b6000828152600260205260408120546001600160a01b0390811690831615610b3957610b39818486610ec2565b6001600160a01b03811615610b7757610b566000856000806109ee565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610ba6576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610c10836104ef565b6000838152600760209081526040808320546001600160a01b0388168452600690925290912091925090818314610c6757600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b600854600090610c989060019061131b565b60008381526009602052604081205460088054939450909284908110610cc057610cc061127c565b906000526020600020015490508060088381548110610ce157610ce161127c565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480610d1957610d1961133c565b6001900381819060005260206000200160009055905550505050565b60006001610d42846104ef565b610d4c919061131b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dc45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610df0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e0e57662386f26fc10000830492506010015b6305f5e1008310610e26576305f5e100830492506008015b6127108310610e3a57612710830492506004015b60648310610e4c576064830492506002015b600a83106102925760010192915050565b6001600160a01b038216610e8757604051633250574960e11b81526000600482015260240161039c565b6000610e95838360006106bc565b90506001600160a01b03811615610486576040516339e3563760e11b81526000600482015260240161039c565b610ecd838383610f26565b610486576001600160a01b038316610efb57604051637e27328960e01b81526004810182905260240161039c565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161039c565b60006001600160a01b038316158015906107895750826001600160a01b0316846001600160a01b03161480610f605750610f6084846105de565b806107895750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610f9f57600080fd5b50565b600060208284031215610fb457600080fd5b81356105d781610f89565b60005b83811015610fda578181015183820152602001610fc2565b50506000910152565b60008151808452610ffb816020860160208601610fbf565b601f01601f19169290920160200192915050565b6020815260006105d76020830184610fe3565b60006020828403121561103457600080fd5b5035919050565b80356001600160a01b038116811461105257600080fd5b919050565b6000806040838503121561106a57600080fd5b6110738361103b565b946020939093013593505050565b60008060006060848603121561109657600080fd5b61109f8461103b565b92506110ad6020850161103b565b929592945050506040919091013590565b6000602082840312156110d057600080fd5b6105d78261103b565b600080604083850312156110ec57600080fd5b6110f58361103b565b91506020830135801515811461110a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561114157600080fd5b61114a8561103b565b93506111586020860161103b565b925060408501359150606085013567ffffffffffffffff81111561117b57600080fd5b8501601f8101871361118c57600080fd5b803567ffffffffffffffff8111156111a6576111a6611115565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156111d5576111d5611115565b6040528181528282016020018910156111ed57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561122257600080fd5b61122b8361103b565b91506112396020840161103b565b90509250929050565b600181811c9082168061125657607f821691505b60208210810361127657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516112a4818460208801610fbf565b8351908301906112b8818360208801610fbf565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112f490830184610fe3565b9695505050505050565b60006020828403121561131057600080fd5b81516105d781610f89565b8181038181111561029257634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220cc5bfc09e6d9244360a4e765843f1586826139f7647ba8c555f588a7a73e62f864736f6c634300081c0033",
      sourceMap:
        "138:280:16:-:0;;;226:43;;;;;;;;;;1380:113:1;;;;;;;;;;;;;-1:-1:-1;;;1380:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:1;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:1;:17;1479:7;1469;:17;:::i;:::-;;1380:113;;138:280:16;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:17;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:17;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:17;;;2500:26;2451:89;-1:-1:-1;;1308:1:17;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:17;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:17;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:17;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:17:o;:::-;138:280:16;;;;;;",
      linkReferences: {},
    },
    deployedBytecode: {
      object:
        "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b4114610219578063a22cb46514610221578063b88d4fde14610234578063c87b56dd14610247578063e985e9c51461025a57600080fd5b806342842e0e146101cd5780634f6ccce7146101e05780636352211e146101f357806370a082311461020657600080fd5b80631249c58b116100de5780631249c58b1461018d57806318160ddd1461019557806323b872dd146101a75780632f745c59146101ba57600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610fa2565b61026d565b60405190151581526020015b60405180910390f35b610140610298565b60405161012f919061100f565b61016061015b366004611022565b61032a565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611057565b610353565b005b61018b610362565b6008545b60405190815260200161012f565b61018b6101b5366004611081565b610376565b6101996101c8366004611057565b610406565b61018b6101db366004611081565b61046b565b6101996101ee366004611022565b61048b565b610160610201366004611022565b6104e4565b6101996102143660046110be565b6104ef565b610140610537565b61018b61022f3660046110d9565b610546565b61018b61024236600461112b565b610551565b610140610255366004611022565b610569565b61012361026836600461120f565b6105de565b60006001600160e01b0319821663780e9d6360e01b148061029257506102928261060c565b92915050565b6060600080546102a790611242565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390611242565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b60006103358261065c565b506000828152600460205260409020546001600160a01b0316610292565b61035e828233610695565b5050565b6103743361036f60085490565b6106a2565b565b6001600160a01b0382166103a557604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103b28383336106bc565b9050836001600160a01b0316816001600160a01b031614610400576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161039c565b50505050565b6000610411836104ef565b82106104425760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161039c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61048683838360405180602001604052806000815250610551565b505050565b600061049660085490565b82106104bf5760405163295f44f760e21b8152600060048201526024810183905260440161039c565b600882815481106104d2576104d261127c565b90600052602060002001549050919050565b60006102928261065c565b60006001600160a01b03821661051b576040516322718ad960e21b81526000600482015260240161039c565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a790611242565b61035e338383610791565b61055c848484610376565b6104003385858585610830565b60606105748261065c565b50600061058c60408051602081019091526000815290565b905060008151116105ac57604051806020016040528060008152506105d7565b806105b68461095b565b6040516020016105c7929190611292565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061063d57506001600160e01b03198216635b5e139f60e01b145b8061029257506301ffc9a760e01b6001600160e01b0319831614610292565b6000818152600260205260408120546001600160a01b03168061029257604051637e27328960e01b81526004810184905260240161039c565b61048683838360016109ee565b61035e828260405180602001604052806000815250610af4565b6000806106ca858585610b0c565b90506001600160a01b0381166107275761072284600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61074a565b846001600160a01b0316816001600160a01b03161461074a5761074a8185610c05565b6001600160a01b0385166107665761076184610c86565b610789565b846001600160a01b0316816001600160a01b031614610789576107898585610d35565b949350505050565b6001600160a01b0382166107c357604051630b61174360e31b81526001600160a01b038316600482015260240161039c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561095457604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108729088908890879087906004016112c1565b6020604051808303816000875af19250505080156108ad575060408051601f3d908101601f191682019092526108aa918101906112fe565b60015b610916573d8080156108db576040519150601f19603f3d011682016040523d82523d6000602084013e6108e0565b606091505b50805160000361090e57604051633250574960e11b81526001600160a01b038516600482015260240161039c565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461095257604051633250574960e11b81526001600160a01b038516600482015260240161039c565b505b5050505050565b6060600061096883610d85565b600101905060008167ffffffffffffffff81111561098857610988611115565b6040519080825280601f01601f1916602001820160405280156109b2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109bc57509392505050565b8080610a0257506001600160a01b03821615155b15610ac4576000610a128461065c565b90506001600160a01b03831615801590610a3e5750826001600160a01b0316816001600160a01b031614155b8015610a515750610a4f81846105de565b155b15610a7a5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161039c565b8115610ac25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610afe8383610e5d565b610486336000858585610830565b6000828152600260205260408120546001600160a01b0390811690831615610b3957610b39818486610ec2565b6001600160a01b03811615610b7757610b566000856000806109ee565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610ba6576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610c10836104ef565b6000838152600760209081526040808320546001600160a01b0388168452600690925290912091925090818314610c6757600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b600854600090610c989060019061131b565b60008381526009602052604081205460088054939450909284908110610cc057610cc061127c565b906000526020600020015490508060088381548110610ce157610ce161127c565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480610d1957610d1961133c565b6001900381819060005260206000200160009055905550505050565b60006001610d42846104ef565b610d4c919061131b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dc45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610df0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e0e57662386f26fc10000830492506010015b6305f5e1008310610e26576305f5e100830492506008015b6127108310610e3a57612710830492506004015b60648310610e4c576064830492506002015b600a83106102925760010192915050565b6001600160a01b038216610e8757604051633250574960e11b81526000600482015260240161039c565b6000610e95838360006106bc565b90506001600160a01b03811615610486576040516339e3563760e11b81526000600482015260240161039c565b610ecd838383610f26565b610486576001600160a01b038316610efb57604051637e27328960e01b81526004810182905260240161039c565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161039c565b60006001600160a01b038316158015906107895750826001600160a01b0316846001600160a01b03161480610f605750610f6084846105de565b806107895750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610f9f57600080fd5b50565b600060208284031215610fb457600080fd5b81356105d781610f89565b60005b83811015610fda578181015183820152602001610fc2565b50506000910152565b60008151808452610ffb816020860160208601610fbf565b601f01601f19169290920160200192915050565b6020815260006105d76020830184610fe3565b60006020828403121561103457600080fd5b5035919050565b80356001600160a01b038116811461105257600080fd5b919050565b6000806040838503121561106a57600080fd5b6110738361103b565b946020939093013593505050565b60008060006060848603121561109657600080fd5b61109f8461103b565b92506110ad6020850161103b565b929592945050506040919091013590565b6000602082840312156110d057600080fd5b6105d78261103b565b600080604083850312156110ec57600080fd5b6110f58361103b565b91506020830135801515811461110a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561114157600080fd5b61114a8561103b565b93506111586020860161103b565b925060408501359150606085013567ffffffffffffffff81111561117b57600080fd5b8501601f8101871361118c57600080fd5b803567ffffffffffffffff8111156111a6576111a6611115565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156111d5576111d5611115565b6040528181528282016020018910156111ed57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561122257600080fd5b61122b8361103b565b91506112396020840161103b565b90509250929050565b600181811c9082168061125657607f821691505b60208210810361127657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516112a4818460208801610fbf565b8351908301906112b8818360208801610fbf565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112f490830184610fe3565b9695505050505050565b60006020828403121561131057600080fd5b81516105d781610f89565b8181038181111561029257634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220cc5bfc09e6d9244360a4e765843f1586826139f7647ba8c555f588a7a73e62f864736f6c634300081c0033",
      sourceMap:
        "138:280:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:222:4;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1435:222:4;;;;;;;;2364:89:1;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:17;;;1725:51;;1713:2;1698:18;3496:154:1;1579:203:17;3322:113:1;;;;;;:::i;:::-;;:::i;:::-;;340:76:16;;;:::i;2062:102:4:-;2140:10;:17;2062:102;;;2416:25:17;;;2404:2;2389:18;2062:102:4;2270:177:17;4142:578:1;;;;;;:::i;:::-;;:::i;1736:255:4:-;;;;;;:::i;:::-;;:::i;4786:132:1:-;;;;;;:::i;:::-;;:::i;2236:226:4:-;;;;;;:::i;:::-;;:::i;2184:118:1:-;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;2517:93::-;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;2676:255::-;;;;;;:::i;:::-;;:::i;3927:153::-;;;;;;:::i;:::-;;:::i;1435:222:4:-;1537:4;-1:-1:-1;;;;;;1560:50:4;;-1:-1:-1;;;1560:50:4;;:90;;;1614:36;1638:11;1614:23;:36::i;:::-;1553:97;1435:222;-1:-1:-1;;1435:222:4:o;2364:89:1:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:1;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:1;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:8;3393:8:1;:35::i;:::-;3322:113;;:::o;340:76:16:-;373:36;383:10;395:13;2140:10:4;:17;;2062:102;395:13:16;373:9;:36::i;:::-;340:76::o;4142:578:1:-;-1:-1:-1;;;;;4236:16:1;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:1;;4305:1;4275:33;;;1725:51:17;1698:18;;4275:33:1;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:8;4561:7:1;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:1;:13;-1:-1:-1;;;;;4609:21:1;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:1;;-1:-1:-1;;;;;5588:32:17;;;4653:50:1;;;5570:51:17;5637:18;;;5630:34;;;5700:32;;5680:18;;;5673:60;5543:18;;4653:50:1;5368:371:17;4605:109:1;4222:498;4142:578;;;:::o;1736:255:4:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:4;;-1:-1:-1;;;;;5936:32:17;;1895:36:4;;;5918:51:17;5985:18;;;5978:34;;;5891:18;;1895:36:4;5744:274:17;1843:99:4;-1:-1:-1;;;;;;1958:19:4;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;4786:132:1:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2236:226:4:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:4;;2401:1;2370:41;;;5918:51:17;5985:18;;;5978:34;;;5891:18;;2370:41:4;5744:274:17;2321:101:4;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;2184:118:1:-;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:1;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:1;;2074:1;2047:30;;;1725:51:17;1698:18;;2047:30:1;1579:203:17;2001:87:1;-1:-1:-1;;;;;;2104:16:1;;;;;:9;:16;;;;;;;1919:208::o;2517:93::-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:8;3835:8:1;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:8;5186:4:1;5192:2;5196:7;5205:4;5138:33;:72::i;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;3249:9;;;;;;;;;-1:-1:-1;3249:9:1;;;3173:92;2822:10;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:1:o;3927:153::-;-1:-1:-1;;;;;4038:25:1;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;1560:300::-;1662:4;-1:-1:-1;;;;;;1697:40:1;;-1:-1:-1;;;1697:40:1;;:104;;-1:-1:-1;;;;;;;1753:48:1;;-1:-1:-1;;;1753:48:1;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:11;;;1817:36:1;763:146:11;16212:241:1;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:1;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:1;;;;;2416:25:17;;;2389:18;;16383:31:1;2270:177:17;14492:120:1;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;2518:625:4:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:4;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:4;:13;-1:-1:-1;;;;;2807:19:4;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:4;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:4;:13;-1:-1:-1;;;;;3020:19:4;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3123:13;2518:625;-1:-1:-1;;;;2518:625:4:o;15665:312:1:-;-1:-1:-1;;;;;15772:22:1;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:1;;-1:-1:-1;;;;;1743:32:17;;15817:31:1;;;1725:51:17;1698:18;;15817:31:1;1579:203:17;15768:91:1;-1:-1:-1;;;;;15868:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:1;;;;;;;;;;15929:41;;540::17;;;15929::1;;513:18:17;15929:41:1;;;;;;;15665:312;;;:::o;985:924:7:-;-1:-1:-1;;;;;1165:14:7;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:7;;-1:-1:-1;;;;;1203:36:7;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:7;;;;;;;;-1:-1:-1;;1203:67:7;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:7;;-1:-1:-1;;;;;1743:32:17;;1664:39:7;;;1725:51:17;1698:18;;1664:39:7;1579:203:17;1556:323:7;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:7;;-1:-1:-1;;;1317:51:7;1313:182;;1437:39;;-1:-1:-1;;;1437:39:7;;-1:-1:-1;;;;;1743:32:17;;1437:39:7;;;1725:51:17;1698:18;;1437:39:7;1579:203:17;1313:182:7;1271:238;1199:694;985:924;;;;;:::o;637:632:10:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:10;-1:-1:-1;794:41:10;-1:-1:-1;924:28:10;;;940:2;924:28;979:247;-1:-1:-1;;1010:5:10;-1:-1:-1;;;1109:2:10;1098:14;;1093:32;1010:5;1080:46;1170:2;1161:11;;;-1:-1:-1;1190:21:10;979:247;1190:21;-1:-1:-1;1246:6:10;637:632;-1:-1:-1;;;637:632:10:o;14794:662:1:-;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:1;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:1;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:1;:5;-1:-1:-1;;;;;15189:13:1;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:1;;-1:-1:-1;;;;;1743:32:17;;15263:27:1;;;1725:51:17;1698:18;;15263:27:1;1579:203:17;15163:142:1;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:1;15366:5;-1:-1:-1;;;;;15357:28:1;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:1;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:1;-1:-1:-1;;;;;15420:29:1;;;;;;;;;;14794:662::o;10977:207::-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;735:10:8;11155:1:1;11159:2;11163:7;11172:4;11099:33;:78::i;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:1;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:1;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:1;;;9180:256;-1:-1:-1;;;;;9450:16:1;;;9446:107;;-1:-1:-1;;;;;9510:13:1;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:1;-1:-1:-1;;;;;9563:21:1;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:1:o;4624:1055:4:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;;;;-1:-1:-1;;;;;5058:18:4;;;;:12;:18;;;;;;4886:40;;-1:-1:-1;4957:26:4;5180:28;;;5176:325;;5224:19;5246:35;;;;;;;;;;;;5296:31;;;;;;:45;;;5413:30;;:17;:30;;;;;:43;;;5176:325;5594:26;;;;:17;:26;;;;;;;;5587:33;;;5637:35;;;;-1:-1:-1;5637:35:4;;5630:42;-1:-1:-1;4624:1055:4:o;5967:1061::-;6241:10;:17;6216:22;;6241:21;;6261:1;;6241:21;:::i;:::-;6272:18;6293:24;;;:15;:24;;;;;;6661:10;:26;;6216:46;;-1:-1:-1;6293:24:4;;6216:46;;6661:26;;;;;;:::i;:::-;;;;;;;;;6639:48;;6723:11;6698:10;6709;6698:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6802:28;;;:15;:28;;;;;;;:41;;;6971:24;;;;;6964:31;7005:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6038:990;;;5967:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:4;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:4:o;25316:916:13:-;25369:7;;-1:-1:-1;;;25444:17:13;;25440:103;;-1:-1:-1;;;25481:17:13;;;-1:-1:-1;25526:2:13;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:13;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:13;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:13;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:13;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:13;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:13:o;9978:327:1:-;-1:-1:-1;;;;;10045:16:1;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:1;;10114:1;10084:33;;;1725:51:17;1698:18;;10084:33:1;1579:203:17;10041:87:1;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:1;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:1;;10285:1;10257:31;;;1725:51:17;1698:18;;10257:31:1;1579:203:17;7105:368:1;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:1;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:1;;;;;2416:25:17;;;2389:18;;7321:31:1;2270:177:17;7271:186:1;7398:44;;-1:-1:-1;;;7398:44:1;;-1:-1:-1;;;;;5936:32:17;;7398:44:1;;;5918:51:17;5985:18;;;5978:34;;;5891:18;;7398:44:1;5744:274:17;6401:272:1;6504:4;-1:-1:-1;;;;;6539:21:1;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:1;:5;-1:-1:-1;;;;;6577:16:1;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:1;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:1;;;6633:32;;;;6520:146;-1:-1:-1;6401:272:1:o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:17;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:17;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:17:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:17;;1348:226;-1:-1:-1;1348:226:17:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:17;;1894:42;;1884:70;;1950:1;1947;1940:12;1884:70;1787:173;;;:::o;1965:300::-;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:17:o;2452:374::-;2529:6;2537;2545;2598:2;2586:9;2577:7;2573:23;2569:32;2566:52;;;2614:1;2611;2604:12;2566:52;2637:29;2656:9;2637:29;:::i;:::-;2627:39;;2685:38;2719:2;2708:9;2704:18;2685:38;:::i;:::-;2452:374;;2675:48;;-1:-1:-1;;;2792:2:17;2777:18;;;;2764:32;;2452:374::o;2831:186::-;2890:6;2943:2;2931:9;2922:7;2918:23;2914:32;2911:52;;;2959:1;2956;2949:12;2911:52;2982:29;3001:9;2982:29;:::i;3022:347::-;3087:6;3095;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3187:29;3206:9;3187:29;:::i;:::-;3177:39;;3266:2;3255:9;3251:18;3238:32;3313:5;3306:13;3299:21;3292:5;3289:32;3279:60;;3335:1;3332;3325:12;3279:60;3358:5;3348:15;;;3022:347;;;;;:::o;3374:127::-;3435:10;3430:3;3426:20;3423:1;3416:31;3466:4;3463:1;3456:15;3490:4;3487:1;3480:15;3506:1207;3601:6;3609;3617;3625;3678:3;3666:9;3657:7;3653:23;3649:33;3646:53;;;3695:1;3692;3685:12;3646:53;3718:29;3737:9;3718:29;:::i;:::-;3708:39;;3766:38;3800:2;3789:9;3785:18;3766:38;:::i;:::-;3756:48;-1:-1:-1;3873:2:17;3858:18;;3845:32;;-1:-1:-1;3952:2:17;3937:18;;3924:32;3979:18;3968:30;;3965:50;;;4011:1;4008;4001:12;3965:50;4034:22;;4087:4;4079:13;;4075:27;-1:-1:-1;4065:55:17;;4116:1;4113;4106:12;4065:55;4156:2;4143:16;4182:18;4174:6;4171:30;4168:56;;;4204:18;;:::i;:::-;4253:2;4247:9;4345:2;4307:17;;-1:-1:-1;;4303:31:17;;;4336:2;4299:40;4295:54;4283:67;;4380:18;4365:34;;4401:22;;;4362:62;4359:88;;;4427:18;;:::i;:::-;4463:2;4456:22;4487;;;4528:15;;;4545:2;4524:24;4521:37;-1:-1:-1;4518:57:17;;;4571:1;4568;4561:12;4518:57;4627:6;4622:2;4618;4614:11;4609:2;4601:6;4597:15;4584:50;4680:1;4675:2;4666:6;4658;4654:19;4650:28;4643:39;4701:6;4691:16;;;;;3506:1207;;;;;;;:::o;4718:260::-;4786:6;4794;4847:2;4835:9;4826:7;4822:23;4818:32;4815:52;;;4863:1;4860;4853:12;4815:52;4886:29;4905:9;4886:29;:::i;:::-;4876:39;;4934:38;4968:2;4957:9;4953:18;4934:38;:::i;:::-;4924:48;;4718:260;;;;;:::o;4983:380::-;5062:1;5058:12;;;;5105;;;5126:61;;5180:4;5172:6;5168:17;5158:27;;5126:61;5233:2;5225:6;5222:14;5202:18;5199:38;5196:161;;5279:10;5274:3;5270:20;5267:1;5260:31;5314:4;5311:1;5304:15;5342:4;5339:1;5332:15;5196:161;;4983:380;;;:::o;6023:127::-;6084:10;6079:3;6075:20;6072:1;6065:31;6115:4;6112:1;6105:15;6139:4;6136:1;6129:15;6155:496;6334:3;6372:6;6366:13;6388:66;6447:6;6442:3;6435:4;6427:6;6423:17;6388:66;:::i;:::-;6517:13;;6476:16;;;;6539:70;6517:13;6476:16;6586:4;6574:17;;6539:70;:::i;:::-;6625:20;;6155:496;-1:-1:-1;;;;6155:496:17:o;6656:485::-;-1:-1:-1;;;;;6887:32:17;;;6869:51;;6956:32;;6951:2;6936:18;;6929:60;7020:2;7005:18;;6998:34;;;7068:3;7063:2;7048:18;;7041:31;;;-1:-1:-1;;7089:46:17;;7115:19;;7107:6;7089:46;:::i;:::-;7081:54;6656:485;-1:-1:-1;;;;;;6656:485:17:o;7146:249::-;7215:6;7268:2;7256:9;7247:7;7243:23;7239:32;7236:52;;;7284:1;7281;7274:12;7236:52;7316:9;7310:16;7335:30;7359:5;7335:30;:::i;7532:225::-;7599:9;;;7620:11;;;7617:134;;;7673:10;7668:3;7664:20;7661:1;7654:31;7708:4;7705:1;7698:15;7736:4;7733:1;7726:15;7762:127;7823:10;7818:3;7814:20;7811:1;7804:31;7854:4;7851:1;7844:15;7878:4;7875:1;7868:15",
      linkReferences: {},
    },
    methodIdentifiers: {
      "approve(address,uint256)": "095ea7b3",
      "balanceOf(address)": "70a08231",
      "getApproved(uint256)": "081812fc",
      "isApprovedForAll(address,address)": "e985e9c5",
      "mint()": "1249c58b",
      "name()": "06fdde03",
      "ownerOf(uint256)": "6352211e",
      "safeTransferFrom(address,address,uint256)":
        "42842e0e",
      "safeTransferFrom(address,address,uint256,bytes)":
        "b88d4fde",
      "setApprovalForAll(address,bool)": "a22cb465",
      "supportsInterface(bytes4)": "01ffc9a7",
      "symbol()": "95d89b41",
      "tokenByIndex(uint256)": "4f6ccce7",
      "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
      "tokenURI(uint256)": "c87b56dd",
      "totalSupply()": "18160ddd",
      "transferFrom(address,address,uint256)": "23b872dd",
    },
    rawMetadata:
      '{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC721EnumerableForbiddenBatchMint()":[{"details":"Batch mint is not allowed."}],"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can\'t be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"ERC721OutOfBoundsIndex(address,uint256)":[{"details":"An `owner`\'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/CryptoDevsNFT.sol":"CryptoDevsNFT"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b","license":"MIT","urls":["bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b","dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"]},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a","license":"MIT","urls":["bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09","dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261","license":"MIT","urls":["bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11","dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d","license":"MIT","urls":["bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34","dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"keccak256":"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb","license":"MIT","urls":["bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00","dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"keccak256":"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de","license":"MIT","urls":["bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff","dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","license":"MIT","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"]},"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol":{"keccak256":"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855","license":"MIT","urls":["bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd","dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed","license":"MIT","urls":["bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0","dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"]},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa","license":"MIT","urls":["bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287","dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","license":"MIT","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]},"src/CryptoDevsNFT.sol":{"keccak256":"0x8029db1148e18dca9f52115f34168d605f49f47a40d5ea0354e4dbede72cae9d","license":"MIT","urls":["bzz-raw://8d89c69e20db269e45b593474a14db17260423f53514a65b8ea7a21764e7de28","dweb:/ipfs/QmVh2eSh8ctWAvEYcme14CUChTaN4NCSxUqytB8ugJ3y2r"]}},"version":1}',
    metadata: {
      compiler: { version: "0.8.28+commit.7893614a" },
      language: "Solidity",
      output: {
        abi: [
          {
            inputs: [],
            stateMutability: "nonpayable",
            type: "constructor",
          },
          {
            inputs: [],
            type: "error",
            name: "ERC721EnumerableForbiddenBatchMint",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
            ],
            type: "error",
            name: "ERC721IncorrectOwner",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            type: "error",
            name: "ERC721InsufficientApproval",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "approver",
                type: "address",
              },
            ],
            type: "error",
            name: "ERC721InvalidApprover",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
            ],
            type: "error",
            name: "ERC721InvalidOperator",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
            ],
            type: "error",
            name: "ERC721InvalidOwner",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
            ],
            type: "error",
            name: "ERC721InvalidReceiver",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
            ],
            type: "error",
            name: "ERC721InvalidSender",
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            type: "error",
            name: "ERC721NonexistentToken",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
            ],
            type: "error",
            name: "ERC721OutOfBoundsIndex",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "approved",
                type: "address",
                indexed: true,
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
                indexed: true,
              },
            ],
            type: "event",
            name: "Approval",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
                indexed: true,
              },
              {
                internalType: "bool",
                name: "approved",
                type: "bool",
                indexed: false,
              },
            ],
            type: "event",
            name: "ApprovalForAll",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "from",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
                indexed: true,
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
                indexed: true,
              },
            ],
            type: "event",
            name: "Transfer",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "approve",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "balanceOf",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "getApproved",
            outputs: [
              {
                internalType: "address",
                name: "",
                type: "address",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "isApprovedForAll",
            outputs: [
              {
                internalType: "bool",
                name: "",
                type: "bool",
              },
            ],
          },
          {
            inputs: [],
            stateMutability: "nonpayable",
            type: "function",
            name: "mint",
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "name",
            outputs: [
              {
                internalType: "string",
                name: "",
                type: "string",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "ownerOf",
            outputs: [
              {
                internalType: "address",
                name: "",
                type: "address",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "safeTransferFrom",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "safeTransferFrom",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "bool",
                name: "approved",
                type: "bool",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "setApprovalForAll",
          },
          {
            inputs: [
              {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "supportsInterface",
            outputs: [
              {
                internalType: "bool",
                name: "",
                type: "bool",
              },
            ],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "symbol",
            outputs: [
              {
                internalType: "string",
                name: "",
                type: "string",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokenByIndex",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokenOfOwnerByIndex",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokenURI",
            outputs: [
              {
                internalType: "string",
                name: "",
                type: "string",
              },
            ],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "totalSupply",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "transferFrom",
          },
        ],
        devdoc: {
          kind: "dev",
          methods: {
            "approve(address,uint256)": {
              details: "See {IERC721-approve}.",
            },
            "balanceOf(address)": {
              details: "See {IERC721-balanceOf}.",
            },
            "getApproved(uint256)": {
              details: "See {IERC721-getApproved}.",
            },
            "isApprovedForAll(address,address)": {
              details: "See {IERC721-isApprovedForAll}.",
            },
            "name()": {
              details: "See {IERC721Metadata-name}.",
            },
            "ownerOf(uint256)": {
              details: "See {IERC721-ownerOf}.",
            },
            "safeTransferFrom(address,address,uint256)": {
              details: "See {IERC721-safeTransferFrom}.",
            },
            "safeTransferFrom(address,address,uint256,bytes)":
              {
                details: "See {IERC721-safeTransferFrom}.",
              },
            "setApprovalForAll(address,bool)": {
              details: "See {IERC721-setApprovalForAll}.",
            },
            "supportsInterface(bytes4)": {
              details: "See {IERC165-supportsInterface}.",
            },
            "symbol()": {
              details: "See {IERC721Metadata-symbol}.",
            },
            "tokenByIndex(uint256)": {
              details:
                "See {IERC721Enumerable-tokenByIndex}.",
            },
            "tokenOfOwnerByIndex(address,uint256)": {
              details:
                "See {IERC721Enumerable-tokenOfOwnerByIndex}.",
            },
            "tokenURI(uint256)": {
              details: "See {IERC721Metadata-tokenURI}.",
            },
            "totalSupply()": {
              details:
                "See {IERC721Enumerable-totalSupply}.",
            },
            "transferFrom(address,address,uint256)": {
              details: "See {IERC721-transferFrom}.",
            },
          },
          version: 1,
        },
        userdoc: { kind: "user", methods: {}, version: 1 },
      },
      settings: {
        remappings: [
          "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ],
        optimizer: { enabled: true, runs: 200 },
        metadata: { bytecodeHash: "ipfs" },
        compilationTarget: {
          "src/CryptoDevsNFT.sol": "CryptoDevsNFT",
        },
        evmVersion: "paris",
        libraries: {},
      },
      sources: {
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":
          {
            keccak256:
              "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
            urls: [
              "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
              "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":
          {
            keccak256:
              "0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a",
            urls: [
              "bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09",
              "dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":
          {
            keccak256:
              "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
            urls: [
              "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
              "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":
          {
            keccak256:
              "0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d",
            urls: [
              "bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34",
              "dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol":
          {
            keccak256:
              "0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb",
            urls: [
              "bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00",
              "dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol":
          {
            keccak256:
              "0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de",
            urls: [
              "bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff",
              "dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":
          {
            keccak256:
              "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
            urls: [
              "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
              "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol":
          {
            keccak256:
              "0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855",
            urls: [
              "bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd",
              "dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/Context.sol":
          {
            keccak256:
              "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
            urls: [
              "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
              "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/Panic.sol":
          {
            keccak256:
              "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
            urls: [
              "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
              "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol":
          {
            keccak256:
              "0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed",
            urls: [
              "bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0",
              "dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":
          {
            keccak256:
              "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
            urls: [
              "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
              "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":
          {
            keccak256:
              "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
            urls: [
              "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
              "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol":
          {
            keccak256:
              "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
            urls: [
              "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
              "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":
          {
            keccak256:
              "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
            urls: [
              "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
              "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":
          {
            keccak256:
              "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
            urls: [
              "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
              "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ",
            ],
            license: "MIT",
          },
        "src/CryptoDevsNFT.sol": {
          keccak256:
            "0x8029db1148e18dca9f52115f34168d605f49f47a40d5ea0354e4dbede72cae9d",
          urls: [
            "bzz-raw://8d89c69e20db269e45b593474a14db17260423f53514a65b8ea7a21764e7de28",
            "dweb:/ipfs/QmVh2eSh8ctWAvEYcme14CUChTaN4NCSxUqytB8ugJ3y2r",
          ],
          license: "MIT",
        },
      },
      version: 1,
    },
    id: 16,
  },
]; // NFT CONTRACT ABI
export const FakeNFTMarketplaceABI = [
  {
    abi: [
      {
        type: "function",
        name: "available",
        inputs: [
          {
            name: "_tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          { name: "", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "getPrice",
        inputs: [],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "purchase",
        inputs: [
          {
            name: "_tokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [],
        stateMutability: "payable",
      },
      {
        type: "function",
        name: "tokens",
        inputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "address",
            internalType: "address",
          },
        ],
        stateMutability: "view",
      },
    ],
    bytecode: {
      object:
        "0x608060405267016345785d8a0000600155348015601b57600080fd5b506101ea8061002b6000396000f3fe60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461009757806398d5fdca146100c7578063efef39a1146100e5575b600080fd5b34801561005057600080fd5b5061007a61005f36600461019b565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a357600080fd5b506100b76100b236600461019b565b6100fa565b604051901515815260200161008e565b3480156100d357600080fd5b5060015460405190815260200161008e565b6100f86100f336600461019b565b610126565b005b6000818152602081905260408120546001600160a01b031661011e57506001919050565b506000919050565b600154341461017b5760405162461bcd60e51b815260206004820152601860248201527f54686973204e465420636f73747320302e312065746865720000000000000000604482015260640160405180910390fd5b600090815260208190526040902080546001600160a01b03191633179055565b6000602082840312156101ad57600080fd5b503591905056fea2646970667358221220ca80bc2aaeadcadad3e7dcf71e4c0e42a4ab442450b59fb4fe4f1d8e22c0121b64736f6c634300081c0033",
      sourceMap:
        "58:1159:0:-:0;;;280:9;261:28;;58:1159;;;;;;;;;;;;;;;;",
      linkReferences: {},
    },
    deployedBytecode: {
      object:
        "0x60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461009757806398d5fdca146100c7578063efef39a1146100e5575b600080fd5b34801561005057600080fd5b5061007a61005f36600461019b565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a357600080fd5b506100b76100b236600461019b565b6100fa565b604051901515815260200161008e565b3480156100d357600080fd5b5060015460405190815260200161008e565b6100f86100f336600461019b565b610126565b005b6000818152602081905260408120546001600160a01b031661011e57506001919050565b506000919050565b600154341461017b5760405162461bcd60e51b815260206004820152601860248201527f54686973204e465420636f73747320302e312065746865720000000000000000604482015260640160405180910390fd5b600090815260208190526040902080546001600160a01b03191633179055565b6000602082840312156101ad57600080fd5b503591905056fea2646970667358221220ca80bc2aaeadcadad3e7dcf71e4c0e42a4ab442450b59fb4fe4f1d8e22c0121b64736f6c634300081c0033",
      sourceMap:
        "58:1159:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;159:41;;;;;;;;;;-1:-1:-1;159:41:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;159:41:0;;;;;;-1:-1:-1;;;;;363:32:1;;;345:51;;333:2;318:18;159:41:0;;;;;;;;909:306;;;;;;;;;;-1:-1:-1;909:306:0;;;;;:::i;:::-;;:::i;:::-;;;572:14:1;;565:22;547:41;;535:2;520:18;909:306:0;407:187:1;681:84:0;;;;;;;;;;-1:-1:-1;750:8:0;;681:84;;745:25:1;;;733:2;718:18;681:84:0;599:177:1;455:167:0;;;;;;:::i;:::-;;:::i;:::-;;909:306;969:4;1119:16;;;;;;;;;;;-1:-1:-1;;;;;1119:16:0;1115:72;;-1:-1:-1;1172:4:0;;909:306;-1:-1:-1;909:306:0:o;1115:72::-;-1:-1:-1;1203:5:0;;909:306;-1:-1:-1;909:306:0:o;455:167::-;539:8;;526:9;:21;518:58;;;;-1:-1:-1;;;518:58:0;;983:2:1;518:58:0;;;965:21:1;1022:2;1002:18;;;995:30;1061:26;1041:18;;;1034:54;1105:18;;518:58:0;;;;;;;;586:6;:16;;;;;;;;;;:29;;-1:-1:-1;;;;;;586:29:0;605:10;586:29;;;455:167::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o",
      linkReferences: {},
    },
    methodIdentifiers: {
      "available(uint256)": "96e494e8",
      "getPrice()": "98d5fdca",
      "purchase(uint256)": "efef39a1",
      "tokens(uint256)": "4f64b2be",
    },
    rawMetadata:
      '{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"available","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"purchase","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"available(uint256)":{"details":"available() checks whether the given tokenId has already been sold or not","params":{"_tokenId":"- the tokenId to check for"}},"getPrice()":{"details":"getPrice() returns the price of one NFT"},"purchase(uint256)":{"details":"purchase() accepts ETH and marks the owner of the given tokenId as the caller address","params":{"_tokenId":"- the fake NFT token Id to purchase"}}},"stateVariables":{"nftPrice":{"details":"Set the purchase price for each Fake NFT"},"tokens":{"details":"Maintain a mapping of Fake TokenID to Owner addresses"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/FakeNFTMarketplace.sol":"FakeNFTMarketplace"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"src/FakeNFTMarketplace.sol":{"keccak256":"0x88b0cdefcd0ebc3edd5298b6af3468ab3532f073b72223160b14deb6ae9e1bfc","license":"MIT","urls":["bzz-raw://0ac7de8dc5d7cdb2547e1f11b03089c167572c414c9efdea90e56e693aa35d1f","dweb:/ipfs/QmVgdBuf9qtXfLAxzQ7pgN6ZgknuerFLyqStBs4hrFgSAz"]}},"version":1}',
    metadata: {
      compiler: { version: "0.8.28+commit.7893614a" },
      language: "Solidity",
      output: {
        abi: [
          {
            inputs: [
              {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "available",
            outputs: [
              {
                internalType: "bool",
                name: "",
                type: "bool",
              },
            ],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "getPrice",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
              },
            ],
            stateMutability: "payable",
            type: "function",
            name: "purchase",
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokens",
            outputs: [
              {
                internalType: "address",
                name: "",
                type: "address",
              },
            ],
          },
        ],
        devdoc: {
          kind: "dev",
          methods: {
            "available(uint256)": {
              details:
                "available() checks whether the given tokenId has already been sold or not",
              params: {
                _tokenId: "- the tokenId to check for",
              },
            },
            "getPrice()": {
              details:
                "getPrice() returns the price of one NFT",
            },
            "purchase(uint256)": {
              details:
                "purchase() accepts ETH and marks the owner of the given tokenId as the caller address",
              params: {
                _tokenId:
                  "- the fake NFT token Id to purchase",
              },
            },
          },
          version: 1,
        },
        userdoc: { kind: "user", methods: {}, version: 1 },
      },
      settings: {
        remappings: [
          "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ],
        optimizer: { enabled: true, runs: 200 },
        metadata: { bytecodeHash: "ipfs" },
        compilationTarget: {
          "src/FakeNFTMarketplace.sol":
            "FakeNFTMarketplace",
        },
        evmVersion: "paris",
        libraries: {},
      },
      sources: {
        "src/FakeNFTMarketplace.sol": {
          keccak256:
            "0x88b0cdefcd0ebc3edd5298b6af3468ab3532f073b72223160b14deb6ae9e1bfc",
          urls: [
            "bzz-raw://0ac7de8dc5d7cdb2547e1f11b03089c167572c414c9efdea90e56e693aa35d1f",
            "dweb:/ipfs/QmVgdBuf9qtXfLAxzQ7pgN6ZgknuerFLyqStBs4hrFgSAz",
          ],
          license: "MIT",
        },
      },
      version: 1,
    },
    id: 0,
  },
]; // FAKE MARKETPLACE ABI
export const CryptoDevsDAOABI = [
  {
    abi: [
      {
        type: "constructor",
        inputs: [
          {
            name: "_nftMarketplace",
            type: "address",
            internalType: "address",
          },
          {
            name: "_cryptoDevsNFT",
            type: "address",
            internalType: "address",
          },
        ],
        stateMutability: "payable",
      },
      { type: "fallback", stateMutability: "payable" },
      { type: "receive", stateMutability: "payable" },
      {
        type: "function",
        name: "createProposal",
        inputs: [
          {
            name: "_nftTokenId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "executeProposal",
        inputs: [
          {
            name: "proposalIndex",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "numProposals",
        inputs: [],
        outputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
          {
            name: "",
            type: "address",
            internalType: "address",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "proposals",
        inputs: [
          {
            name: "",
            type: "uint256",
            internalType: "uint256",
          },
        ],
        outputs: [
          {
            name: "nftTokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "yayVotes",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nayVotes",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "executed",
            type: "bool",
            internalType: "bool",
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "renounceOwnership",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "transferOwnership",
        inputs: [
          {
            name: "newOwner",
            type: "address",
            internalType: "address",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "voteOnProposal",
        inputs: [
          {
            name: "proposalIndex",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "vote",
            type: "uint8",
            internalType: "enum CryptoDevsDAO.Vote",
          },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "withdrawEther",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          {
            name: "previousOwner",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "newOwner",
            type: "address",
            indexed: true,
            internalType: "address",
          },
        ],
        anonymous: false,
      },
      {
        type: "error",
        name: "OwnableInvalidOwner",
        inputs: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        type: "error",
        name: "OwnableUnauthorizedAccount",
        inputs: [
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    bytecode: {
      object:
        "0x6080604052604051610d91380380610d91833981016040819052610022916100ef565b338061004857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005181610083565b50600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055610122565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100ea57600080fd5b919050565b6000806040838503121561010257600080fd5b61010b836100d3565b9150610119602084016100d3565b90509250929050565b610c60806101316000396000f3fe6080604052600436106100835760003560e01c8063715018a611610056578063715018a6146101645780637362377b146101795780638da5cb5b1461018e578063efafb22e146101b6578063f2fde38b146101d657005b8063013cf08b146100855780630d61b51914610100578063400e3949146101205780635a43dc0014610144575b005b34801561009157600080fd5b506100d16100a0366004610ade565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0015b60405180910390f35b34801561010c57600080fd5b5061008361011b366004610ade565b6101f6565b34801561012c57600080fd5b5061013660025481565b6040519081526020016100f7565b34801561015057600080fd5b5061013661015f366004610ade565b610497565b34801561017057600080fd5b50610083610622565b34801561018557600080fd5b50610083610636565b34801561019a57600080fd5b506000546040516001600160a01b0390911681526020016100f7565b3480156101c257600080fd5b506100836101d1366004610af7565b610747565b3480156101e257600080fd5b506100836101f1366004610b2b565b610a23565b600480546040516370a0823160e01b815233928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610b54565b1161028e5760405162461bcd60e51b815260040161028590610b6d565b60405180910390fd5b8042600160008381526020019081526020016000206001015411156102ed5760405162461bcd60e51b8152602060048201526015602482015274111150511312539157d393d517d15610d151511151605a1b6044820152606401610285565b60008181526001602052604090206004015460ff161561034f5760405162461bcd60e51b815260206004820152601960248201527f50524f504f53414c5f414c52454144595f4558454355544544000000000000006044820152606401610285565b60008281526001602052604090206003810154600282015411156104855760035460408051634c6afee560e11b815290516000926001600160a01b0316916398d5fdca9160048083019260209291908290030181865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610b54565b9050804710156104205760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b6044820152606401610285565b600354825460405163efef39a160e01b815260048101919091526001600160a01b039091169063efef39a19083906024016000604051808303818588803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b5050505050505b600401805460ff191660011790555050565b600480546040516370a0823160e01b8152339281019290925260009182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610b54565b116105265760405162461bcd60e51b815260040161028590610b6d565b6003546040516312dc929d60e31b8152600481018490526001600160a01b03909116906396e494e890602401602060405180830381865afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190610b97565b6105d25760405162461bcd60e51b815260206004820152601060248201526f4e46545f4e4f545f464f525f53414c4560801b6044820152606401610285565b60025460009081526001602052604090208281556105f24261012c610bcf565b60018201556002805490600061060783610be8565b9190505550600160025461061b9190610c01565b9392505050565b61062a610a61565b6106346000610a8e565b565b61063e610a61565b47806106a05760405162461bcd60e51b815260206004820152602b60248201527f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160448201526a6c616e636520656d70747960a81b6064820152608401610285565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146106ed576040519150601f19603f3d011682016040523d82523d6000602084013e6106f2565b606091505b50509050806107435760405162461bcd60e51b815260206004820152601860248201527f4641494c45445f544f5f57495448445241575f455448455200000000000000006044820152606401610285565b5050565b600480546040516370a0823160e01b815233928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610b54565b116107d65760405162461bcd60e51b815260040161028590610b6d565b81426001600083815260200190815260200160002060010154116108305760405162461bcd60e51b8152602060048201526011602482015270111150511312539157d15610d151511151607a1b6044820152606401610285565b6000838152600160205260408082206004805492516370a0823160e01b815233918101919091529092916001600160a01b0316906370a0823190602401602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190610b54565b90506000805b828110156109885760048054604051632f745c5960e01b81523392810192909252602482018390526000916001600160a01b0390911690632f745c5990604401602060405180830381865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190610b54565b600081815260058701602052604081205491925060ff9091161515900361097f578261096081610be8565b60008381526005880160205260409020805460ff191660011790559350505b506001016108b4565b50600081116109c95760405162461bcd60e51b815260206004820152600d60248201526c1053149150511657d593d51151609a1b6044820152606401610285565b60008560018111156109dd576109dd610c14565b03610a0157808360020160008282546109f69190610bcf565b90915550610a1b9050565b80836003016000828254610a159190610bcf565b90915550505b505050505050565b610a2b610a61565b6001600160a01b038116610a5557604051631e4fbdf760e01b815260006004820152602401610285565b610a5e81610a8e565b50565b6000546001600160a01b031633146106345760405163118cdaa760e01b8152336004820152602401610285565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610af057600080fd5b5035919050565b60008060408385031215610b0a57600080fd5b82359150602083013560028110610b2057600080fd5b809150509250929050565b600060208284031215610b3d57600080fd5b81356001600160a01b038116811461061b57600080fd5b600060208284031215610b6657600080fd5b5051919050565b60208082526010908201526f2727aa2fa0afa220a7afa6a2a6a122a960811b604082015260600190565b600060208284031215610ba957600080fd5b8151801515811461061b57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610be257610be2610bb9565b92915050565b600060018201610bfa57610bfa610bb9565b5060010190565b81810381811115610be257610be2610bb9565b634e487b7160e01b600052602160045260246000fdfea26469706673582212200e097b13005c091606fb2052f632f15c4cfb5089a8b76becf9b70b2560cf709164736f6c634300081c0033",
      sourceMap:
        "1590:6168:2:-:0;;;3052:215;;;;;;;;;;;;;;;;;;:::i;:::-;3129:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:3;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3151:14:2::1;:53:::0;;-1:-1:-1;;;;;3151:53:2;;::::1;-1:-1:-1::0;;;;;;3151:53:2;;::::1;;::::0;;;3214:13:::1;:46:::0;;;;;::::1;::::0;::::1;;::::0;;1590:6168;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:3:-;93:13;;-1:-1:-1;;;;;135:31:3;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;1590:6168:2;;;;;;",
      linkReferences: {},
    },
    deployedBytecode: {
      object:
        "0x6080604052600436106100835760003560e01c8063715018a611610056578063715018a6146101645780637362377b146101795780638da5cb5b1461018e578063efafb22e146101b6578063f2fde38b146101d657005b8063013cf08b146100855780630d61b51914610100578063400e3949146101205780635a43dc0014610144575b005b34801561009157600080fd5b506100d16100a0366004610ade565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0015b60405180910390f35b34801561010c57600080fd5b5061008361011b366004610ade565b6101f6565b34801561012c57600080fd5b5061013660025481565b6040519081526020016100f7565b34801561015057600080fd5b5061013661015f366004610ade565b610497565b34801561017057600080fd5b50610083610622565b34801561018557600080fd5b50610083610636565b34801561019a57600080fd5b506000546040516001600160a01b0390911681526020016100f7565b3480156101c257600080fd5b506100836101d1366004610af7565b610747565b3480156101e257600080fd5b506100836101f1366004610b2b565b610a23565b600480546040516370a0823160e01b815233928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610b54565b1161028e5760405162461bcd60e51b815260040161028590610b6d565b60405180910390fd5b8042600160008381526020019081526020016000206001015411156102ed5760405162461bcd60e51b8152602060048201526015602482015274111150511312539157d393d517d15610d151511151605a1b6044820152606401610285565b60008181526001602052604090206004015460ff161561034f5760405162461bcd60e51b815260206004820152601960248201527f50524f504f53414c5f414c52454144595f4558454355544544000000000000006044820152606401610285565b60008281526001602052604090206003810154600282015411156104855760035460408051634c6afee560e11b815290516000926001600160a01b0316916398d5fdca9160048083019260209291908290030181865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610b54565b9050804710156104205760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b6044820152606401610285565b600354825460405163efef39a160e01b815260048101919091526001600160a01b039091169063efef39a19083906024016000604051808303818588803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b5050505050505b600401805460ff191660011790555050565b600480546040516370a0823160e01b8152339281019290925260009182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610b54565b116105265760405162461bcd60e51b815260040161028590610b6d565b6003546040516312dc929d60e31b8152600481018490526001600160a01b03909116906396e494e890602401602060405180830381865afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190610b97565b6105d25760405162461bcd60e51b815260206004820152601060248201526f4e46545f4e4f545f464f525f53414c4560801b6044820152606401610285565b60025460009081526001602052604090208281556105f24261012c610bcf565b60018201556002805490600061060783610be8565b9190505550600160025461061b9190610c01565b9392505050565b61062a610a61565b6106346000610a8e565b565b61063e610a61565b47806106a05760405162461bcd60e51b815260206004820152602b60248201527f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160448201526a6c616e636520656d70747960a81b6064820152608401610285565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146106ed576040519150601f19603f3d011682016040523d82523d6000602084013e6106f2565b606091505b50509050806107435760405162461bcd60e51b815260206004820152601860248201527f4641494c45445f544f5f57495448445241575f455448455200000000000000006044820152606401610285565b5050565b600480546040516370a0823160e01b815233928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610b54565b116107d65760405162461bcd60e51b815260040161028590610b6d565b81426001600083815260200190815260200160002060010154116108305760405162461bcd60e51b8152602060048201526011602482015270111150511312539157d15610d151511151607a1b6044820152606401610285565b6000838152600160205260408082206004805492516370a0823160e01b815233918101919091529092916001600160a01b0316906370a0823190602401602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190610b54565b90506000805b828110156109885760048054604051632f745c5960e01b81523392810192909252602482018390526000916001600160a01b0390911690632f745c5990604401602060405180830381865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190610b54565b600081815260058701602052604081205491925060ff9091161515900361097f578261096081610be8565b60008381526005880160205260409020805460ff191660011790559350505b506001016108b4565b50600081116109c95760405162461bcd60e51b815260206004820152600d60248201526c1053149150511657d593d51151609a1b6044820152606401610285565b60008560018111156109dd576109dd610c14565b03610a0157808360020160008282546109f69190610bcf565b90915550610a1b9050565b80836003016000828254610a159190610bcf565b90915550505b505050505050565b610a2b610a61565b6001600160a01b038116610a5557604051631e4fbdf760e01b815260006004820152602401610285565b610a5e81610a8e565b50565b6000546001600160a01b031633146106345760405163118cdaa760e01b8152336004820152602401610285565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610af057600080fd5b5035919050565b60008060408385031215610b0a57600080fd5b82359150602083013560028110610b2057600080fd5b809150509250929050565b600060208284031215610b3d57600080fd5b81356001600160a01b038116811461061b57600080fd5b600060208284031215610b6657600080fd5b5051919050565b60208082526010908201526f2727aa2fa0afa220a7afa6a2a6a122a960811b604082015260600190565b600060208284031215610ba957600080fd5b8151801515811461061b57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610be257610be2610bb9565b92915050565b600060018201610bfa57610bfa610bb9565b5060010190565b81810381811115610be257610be2610bb9565b634e487b7160e01b600052602160045260246000fdfea26469706673582212200e097b13005c091606fb2052f632f15c4cfb5089a8b76becf9b70b2560cf709164736f6c634300081c0033",
      sourceMap:
        "1590:6168:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2624:45;;;;;;;;;;-1:-1:-1;2624:45:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:25:3;;;554:2;539:18;;532:34;;;;582:18;;;575:34;;;;640:2;625:18;;618:34;696:14;689:22;683:3;668:19;;661:51;485:3;470:19;2624:45:2;;;;;;;;6552:600;;;;;;;;;;-1:-1:-1;6552:600:2;;;;;:::i;:::-;;:::i;2725:27::-;;;;;;;;;;;;;;;;;;;869:25:3;;;857:2;842:18;2725:27:2;723:177:3;3803:468:2;;;;;;;;;;-1:-1:-1;3803:468:2;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;7260:291:2:-;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1051:51:3;;1039:2;1024:18;1638:85:0;905:203:3;4966:927:2;;;;;;;;;;-1:-1:-1;4966:927:2;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;6552:600:2:-;3435:13;;;:35;;-1:-1:-1;;;3435:35:2;;3459:10;3435:35;;;1051:51:3;;;;3473:1:2;;-1:-1:-1;;;;;3435:13:2;;;;:23;;1024:18:3;;3435:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;3427:68;;;;-1:-1:-1;;;3427:68:2;;;;;;;:::i;:::-;;;;;;;;;6644:13:::1;6185:15;6148:9;:24;6158:13;6148:24;;;;;;;;;;;:33;;;:52;;6140:86;;;::::0;-1:-1:-1;;;6140:86:2;;2529:2:3;6140:86:2::1;::::0;::::1;2511:21:3::0;2568:2;2548:18;;;2541:30;-1:-1:-1;;;2587:18:3;;;2580:51;2648:18;;6140:86:2::1;2327:345:3::0;6140:86:2::1;6244:24;::::0;;;:9:::1;:24;::::0;;;;:33:::1;;::::0;::::1;;:42;6236:80;;;::::0;-1:-1:-1;;;6236:80:2;;2879:2:3;6236:80:2::1;::::0;::::1;2861:21:3::0;2918:2;2898:18;;;2891:30;2957:27;2937:18;;;2930:55;3002:18;;6236:80:2::1;2677:349:3::0;6236:80:2::1;6669:25:::2;6697:24:::0;;;:9:::2;:24;::::0;;;;6873:17:::2;::::0;::::2;::::0;6853::::2;::::0;::::2;::::0;:37:::2;6849:263;;;6925:14;::::0;:25:::2;::::0;;-1:-1:-1;;;6925:25:2;;;;6906:16:::2;::::0;-1:-1:-1;;;;;6925:14:2::2;::::0;:23:::2;::::0;:25:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;:14;:25:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6906:44;;6997:8;6972:21;:33;;6964:62;;;::::0;-1:-1:-1;;;6964:62:2;;3233:2:3;6964:62:2::2;::::0;::::2;3215:21:3::0;3272:2;3252:18;;;3245:30;-1:-1:-1;;;3291:18:3;;;3284:46;3347:18;;6964:62:2::2;3031:340:3::0;6964:62:2::2;7040:14;::::0;7081:19;;7040:61:::2;::::0;-1:-1:-1;;;7040:61:2;;::::2;::::0;::::2;869:25:3::0;;;;-1:-1:-1;;;;;7040:14:2;;::::2;::::0;:23:::2;::::0;7071:8;;842:18:3;;7040:61:2::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;6892:220;6849:263;7121:17;;:24:::0;;-1:-1:-1;;7121:24:2::2;7141:4;7121:24;::::0;;-1:-1:-1;;6552:600:2:o;3803:468::-;3435:13;;;:35;;-1:-1:-1;;;3435:35:2;;3459:10;3435:35;;;1051:51:3;;;;3880:7:2;;;;-1:-1:-1;;;;;3435:13:2;;:23;;1024:18:3;;3435:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;3427:68;;;;-1:-1:-1;;;3427:68:2;;;;;;;:::i;:::-;3907:14:::1;::::0;:37:::1;::::0;-1:-1:-1;;;3907:37:2;;::::1;::::0;::::1;869:25:3::0;;;-1:-1:-1;;;;;3907:14:2;;::::1;::::0;:24:::1;::::0;842:18:3;;3907:37:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3899:66;;;::::0;-1:-1:-1;;;3899:66:2;;3860:2:3;3899:66:2::1;::::0;::::1;3842:21:3::0;3899:2;3879:18;;;3872:30;-1:-1:-1;;;3918:18:3;;;3911:46;3974:18;;3899:66:2::1;3658:340:3::0;3899:66:2::1;4013:12;::::0;3975:25:::1;4003:23:::0;;;:9:::1;:23;::::0;;;;4036:33;;;4178:27:::1;:15;4196:9;4178:27;:::i;:::-;4158:17;::::0;::::1;:47:::0;4216:12:::1;:14:::0;;;:12:::1;:14;::::0;::::1;:::i;:::-;;;;;;4263:1;4248:12;;:16;;;;:::i;:::-;4241:23:::0;3803:468;-1:-1:-1;;;3803:468:2:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7260:291:2:-;1531:13:0;:11;:13::i;:::-;7331:21:2::1;7370:10:::0;7362:66:::1;;;::::0;-1:-1:-1;;;7362:66:2;;4740:2:3;7362:66:2::1;::::0;::::1;4722:21:3::0;4779:2;4759:18;;;4752:30;4818:34;4798:18;;;4791:62;-1:-1:-1;;;4869:18:3;;;4862:41;4920:19;;7362:66:2::1;4538:407:3::0;7362:66:2::1;7439:9;1710:6:0::0;;7453:40:2::1;::::0;-1:-1:-1;;;;;1710:6:0;;;;7482::2;;7439:9;7453:40;7439:9;7453:40;7482:6;1710::0;7453:40:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7438:55;;;7511:4;7503:41;;;::::0;-1:-1:-1;;;7503:41:2;;5362:2:3;7503:41:2::1;::::0;::::1;5344:21:3::0;5401:2;5381:18;;;5374:30;5440:26;5420:18;;;5413:54;5484:18;;7503:41:2::1;5160:348:3::0;7503:41:2::1;7304:247;;7260:291::o:0;4966:927::-;3435:13;;;:35;;-1:-1:-1;;;3435:35:2;;3459:10;3435:35;;;1051:51:3;;;;3473:1:2;;-1:-1:-1;;;;;3435:13:2;;;;:23;;1024:18:3;;3435:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;3427:68;;;;-1:-1:-1;;;3427:68:2;;;;;;;:::i;:::-;5090:13:::1;4515:15;4479:9;:24;4489:13;4479:24;;;;;;;;;;;:33;;;:51;4471:81;;;::::0;-1:-1:-1;;;4471:81:2;;5715:2:3;4471:81:2::1;::::0;::::1;5697:21:3::0;5754:2;5734:18;;;5727:30;-1:-1:-1;;;5773:18:3;;;5766:47;5830:18;;4471:81:2::1;5513:341:3::0;4471:81:2::1;5119:25:::2;5147:24:::0;;;:9:::2;:24;::::0;;;;;5208:13:::2;::::0;;:35;;-1:-1:-1;;;5208:35:2;;5232:10:::2;5208:35:::0;;::::2;1051:51:3::0;;;;5147:24:2;;5119:25;-1:-1:-1;;;;;5208:13:2::2;::::0;:23:::2;::::0;1024:18:3;;5208:35:2::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5182:61;;5253:16;5417:9:::0;5412:281:::2;5436:15;5432:1;:19;5412:281;;;5490:13;::::0;;:48:::2;::::0;-1:-1:-1;;;5490:48:2;;5524:10:::2;5490:48:::0;;::::2;6033:51:3::0;;;;6100:18;;;6093:34;;;5472:15:2::2;::::0;-1:-1:-1;;;;;5490:13:2;;::::2;::::0;:33:::2;::::0;6006:18:3;;5490:48:2::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5556:24;::::0;;;:15:::2;::::0;::::2;:24;::::0;;;;;5472:66;;-1:-1:-1;5556:24:2::2;::::0;;::::2;:33;;::::0;;5552:131:::2;;5609:10:::0;::::2;::::0;::::2;:::i;:::-;5637:24;::::0;;;:15:::2;::::0;::::2;:24;::::0;;;;:31;;-1:-1:-1;;5637:31:2::2;5664:4;5637:31;::::0;;5609:10;-1:-1:-1;;5552:131:2::2;-1:-1:-1::0;5453:3:2::2;;5412:281;;;;5721:1;5710:8;:12;5702:38;;;::::0;-1:-1:-1;;;5702:38:2;;6340:2:3;5702:38:2::2;::::0;::::2;6322:21:3::0;6379:2;6359:18;;;6352:30;-1:-1:-1;;;6398:18:3;;;6391:43;6451:18;;5702:38:2::2;6138:337:3::0;5702:38:2::2;5763:8;5755:4;:16;;;;;;;;:::i;:::-;::::0;5751:136:::2;;5808:8;5787;:17;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5751:136:2::2;::::0;-1:-1:-1;5751:136:2::2;;5868:8;5847;:17;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5751:136:2::2;5109:784;;;3505:1:::1;4966:927:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1051:51:3::0;1024:18;;2672:31:0::1;905:203:3::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1051:51:3;1024:18;;1901:40:0;905:203:3;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:226:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:3;;14:226;-1:-1:-1;14:226:3:o;1113:384::-;1189:6;1197;1250:2;1238:9;1229:7;1225:23;1221:32;1218:52;;;1266:1;1263;1256:12;1218:52;1311:23;;;-1:-1:-1;1410:2:3;1395:18;;1382:32;1445:1;1433:14;;1423:42;;1461:1;1458;1451:12;1423:42;1484:7;1474:17;;;1113:384;;;;;:::o;1502:286::-;1561:6;1614:2;1602:9;1593:7;1589:23;1585:32;1582:52;;;1630:1;1627;1620:12;1582:52;1656:23;;-1:-1:-1;;;;;1708:31:3;;1698:42;;1688:70;;1754:1;1751;1744:12;1793:184;1863:6;1916:2;1904:9;1895:7;1891:23;1887:32;1884:52;;;1932:1;1929;1922:12;1884:52;-1:-1:-1;1955:16:3;;1793:184;-1:-1:-1;1793:184:3:o;1982:340::-;2184:2;2166:21;;;2223:2;2203:18;;;2196:30;-1:-1:-1;;;2257:2:3;2242:18;;2235:46;2313:2;2298:18;;1982:340::o;3376:277::-;3443:6;3496:2;3484:9;3475:7;3471:23;3467:32;3464:52;;;3512:1;3509;3502:12;3464:52;3544:9;3538:16;3597:5;3590:13;3583:21;3576:5;3573:32;3563:60;;3619:1;3616;3609:12;4003:127;4064:10;4059:3;4055:20;4052:1;4045:31;4095:4;4092:1;4085:15;4119:4;4116:1;4109:15;4135:125;4200:9;;;4221:10;;;4218:36;;;4234:18;;:::i;:::-;4135:125;;;;:::o;4265:135::-;4304:3;4325:17;;;4322:43;;4345:18;;:::i;:::-;-1:-1:-1;4392:1:3;4381:13;;4265:135::o;4405:128::-;4472:9;;;4493:11;;;4490:37;;;4507:18;;:::i;6480:127::-;6541:10;6536:3;6532:20;6529:1;6522:31;6572:4;6569:1;6562:15;6596:4;6593:1;6586:15",
      linkReferences: {},
    },
    methodIdentifiers: {
      "createProposal(uint256)": "5a43dc00",
      "executeProposal(uint256)": "0d61b519",
      "numProposals()": "400e3949",
      "owner()": "8da5cb5b",
      "proposals(uint256)": "013cf08b",
      "renounceOwnership()": "715018a6",
      "transferOwnership(address)": "f2fde38b",
      "voteOnProposal(uint256,uint8)": "efafb22e",
      "withdrawEther()": "7362377b",
    },
    rawMetadata:
      '{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_nftMarketplace","type":"address"},{"internalType":"address","name":"_cryptoDevsNFT","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"uint256","name":"_nftTokenId","type":"uint256"}],"name":"createProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalIndex","type":"uint256"}],"name":"executeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"numProposals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"uint256","name":"nftTokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"yayVotes","type":"uint256"},{"internalType":"uint256","name":"nayVotes","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalIndex","type":"uint256"},{"internalType":"enum CryptoDevsDAO.Vote","name":"vote","type":"uint8"}],"name":"voteOnProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"createProposal(uint256)":{"details":"createProposal allows a CryptoDevsNFT holder to create a new proposal in the DAO","params":{"_nftTokenId":"- the tokenID of the NFT to be purchased from FakeNFTMarketplace if this proposal passes"},"returns":{"_0":"Returns the proposal index for the newly created proposal"}},"executeProposal(uint256)":{"details":"executeProposal allows any CryptoDevsNFT holder to execute a proposal after it\'s deadline has been exceeded","params":{"proposalIndex":"- the index of the proposal to execute in the proposals array"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"voteOnProposal(uint256,uint8)":{"details":"voteOnProposal allows a CryptoDevsNFT holder to cast their vote on an active proposal","params":{"proposalIndex":"- the index of the proposal to vote on in the proposals array","vote":"- the type of vote they want to cast"}},"withdrawEther()":{"details":"withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/CryptoDevsDao.sol":"CryptoDevsDAO"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","license":"MIT","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"src/CryptoDevsDao.sol":{"keccak256":"0x3577525edc408bb97a36882bb6afd6bb79303beee40f4c11cdc93688e767d013","license":"MIT","urls":["bzz-raw://9a0adba051c32c917eb8480f234049e4fdfda87a16f2391793b21fc5f5741522","dweb:/ipfs/QmYiHhuBFZkcRP42tjRvXdTEvkktdGWAenpgtuu417c9CZ"]}},"version":1}',
    metadata: {
      compiler: { version: "0.8.28+commit.7893614a" },
      language: "Solidity",
      output: {
        abi: [
          {
            inputs: [
              {
                internalType: "address",
                name: "_nftMarketplace",
                type: "address",
              },
              {
                internalType: "address",
                name: "_cryptoDevsNFT",
                type: "address",
              },
            ],
            stateMutability: "payable",
            type: "constructor",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
            ],
            type: "error",
            name: "OwnableInvalidOwner",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
            ],
            type: "error",
            name: "OwnableUnauthorizedAccount",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "previousOwner",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "newOwner",
                type: "address",
                indexed: true,
              },
            ],
            type: "event",
            name: "OwnershipTransferred",
            anonymous: false,
          },
          {
            inputs: [],
            stateMutability: "payable",
            type: "fallback",
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "_nftTokenId",
                type: "uint256",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "createProposal",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "proposalIndex",
                type: "uint256",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "executeProposal",
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "numProposals",
            outputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "owner",
            outputs: [
              {
                internalType: "address",
                name: "",
                type: "address",
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "",
                type: "uint256",
              },
            ],
            stateMutability: "view",
            type: "function",
            name: "proposals",
            outputs: [
              {
                internalType: "uint256",
                name: "nftTokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "yayVotes",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nayVotes",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "executed",
                type: "bool",
              },
            ],
          },
          {
            inputs: [],
            stateMutability: "nonpayable",
            type: "function",
            name: "renounceOwnership",
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "newOwner",
                type: "address",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "transferOwnership",
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "proposalIndex",
                type: "uint256",
              },
              {
                internalType: "enum CryptoDevsDAO.Vote",
                name: "vote",
                type: "uint8",
              },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "voteOnProposal",
          },
          {
            inputs: [],
            stateMutability: "nonpayable",
            type: "function",
            name: "withdrawEther",
          },
          {
            inputs: [],
            stateMutability: "payable",
            type: "receive",
          },
        ],
        devdoc: {
          kind: "dev",
          methods: {
            "createProposal(uint256)": {
              details:
                "createProposal allows a CryptoDevsNFT holder to create a new proposal in the DAO",
              params: {
                _nftTokenId:
                  "- the tokenID of the NFT to be purchased from FakeNFTMarketplace if this proposal passes",
              },
              returns: {
                _0: "Returns the proposal index for the newly created proposal",
              },
            },
            "executeProposal(uint256)": {
              details:
                "executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded",
              params: {
                proposalIndex:
                  "- the index of the proposal to execute in the proposals array",
              },
            },
            "owner()": {
              details:
                "Returns the address of the current owner.",
            },
            "renounceOwnership()": {
              details:
                "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.",
            },
            "transferOwnership(address)": {
              details:
                "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
            },
            "voteOnProposal(uint256,uint8)": {
              details:
                "voteOnProposal allows a CryptoDevsNFT holder to cast their vote on an active proposal",
              params: {
                proposalIndex:
                  "- the index of the proposal to vote on in the proposals array",
                vote: "- the type of vote they want to cast",
              },
            },
            "withdrawEther()": {
              details:
                "withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract",
            },
          },
          version: 1,
        },
        userdoc: { kind: "user", methods: {}, version: 1 },
      },
      settings: {
        remappings: [
          "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ],
        optimizer: { enabled: true, runs: 200 },
        metadata: { bytecodeHash: "ipfs" },
        compilationTarget: {
          "src/CryptoDevsDao.sol": "CryptoDevsDAO",
        },
        evmVersion: "paris",
        libraries: {},
      },
      sources: {
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol":
          {
            keccak256:
              "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
            urls: [
              "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
              "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a",
            ],
            license: "MIT",
          },
        "lib/openzeppelin-contracts/contracts/utils/Context.sol":
          {
            keccak256:
              "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
            urls: [
              "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
              "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF",
            ],
            license: "MIT",
          },
        "src/CryptoDevsDao.sol": {
          keccak256:
            "0x3577525edc408bb97a36882bb6afd6bb79303beee40f4c11cdc93688e767d013",
          urls: [
            "bzz-raw://9a0adba051c32c917eb8480f234049e4fdfda87a16f2391793b21fc5f5741522",
            "dweb:/ipfs/QmYiHhuBFZkcRP42tjRvXdTEvkktdGWAenpgtuu417c9CZ",
          ],
          license: "MIT",
        },
      },
      version: 1,
    },
    id: 2,
  },
]; // DAO ABI
